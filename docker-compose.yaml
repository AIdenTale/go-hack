services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: gohack
      POSTGRES_USER: gohack
      POSTGRES_PASSWORD: gohack
    ports:
      - "5432:5432"
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./migrations/002_ml_predictions.sql:/docker-entrypoint-initdb.d/002_ml_predictions.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gohack"]
      interval: 5s
      timeout: 5s
      retries: 5

  receiver:
    build:
      context: .
      dockerfile: Dockerfile.receiver
    depends_on:
      postgres:
        condition: service_healthy
      ml:
        condition: service_started
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: gohack
      DB_PASSWORD: gohack
      DB_NAME: gohack
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - receiver
    environment:
      RECEIVER_URL: http://receiver:8080
    volumes:
      - ./config:/app/config

  ml:
    build:
      context: ./i_moscow_hack/pythonProject
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
